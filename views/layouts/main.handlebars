<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href='https://fonts.googleapis.com/css?family=Open+Sans|Raleway:500|Josefin+Sans' rel='stylesheet' class="keep"
    type='text/css'>

  <!-- Bootstrap Core CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">


  <!-- Custom CSS -->
  <link rel="stylesheet" href="css/creative.css" type="text/css">
  <link rel="stylesheet" href="css/style.css">

  <title>Yay Bidet</title>
</head>

<body>
  <!-- navbar goes here -->
  <div id="guestnavbar">

    <nav class="navbar navbar-default navbar-fixed-top">
      <div class="container-fluid">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand page-scroll" href="#page-top">Bidet Finder</a>
        </div>

        <div class="collapse navbar-collapse" id="myNavbar">
          <ul class="nav navbar-nav navbar-right">
            <li><a class="page-scroll" href="#home">HOME</a></li>
            <li><a class="page-scroll" href="#Bidet Finder">My Bidet Finder</a></li>
            <li><a class="page-scroll" href="#logout">LOGOUT</a></li>
            <li class="dropdown">
              <a class="dropdown-toggle page-scroll" data-toggle="dropdown" href="#">MORE
                <span class="caret"></span>
              </a>
              <ul class="dropdown-menu">
                <li><a href="#">Share Pictures</a></li>
                <li><a href="#">Share APP</a></li>
                <li><a href="#">Just Talk</a></li>
              </ul>
            </li>
            <li><a href="#"><span class="glyphicon glyphicon-search"></span></a></li>
          </ul>
        </div>

      </div>
    </nav>
  </div>

  <!-- React goes here -->
  <div id="container" class="text-center">

  </div>

  <div id="floating-panel">
    <div id="locationFeild">
      <input id="address" type="textbox" style="width:230px" placeholder="Type location"></input>
      <button id="submit" class="btn btn-info" type="button">Go!</button>
    </div>
  </div>

  <div id="map">

  </div>

    <!-- footer goes here -->
  <div id="footer">
    <footer class="text-center">
      <a class="up-arrow" href="#container" data-toggle="tooltip" title="TO TOP">
        <span class="glyphicon glyphicon-chevron-up"></span>
      </a><br><br>
      <p>Project Repo: <a href="https://github.com/ShmouG/Project2" data-toggle="tooltip" title="Learn APP">github repo
        </a></p><br>
      <p>
        <a href="" data-toggle="tooltip" title="Github"></a>
      </p>
    </footer>
  </div>

  <script>
function initMap() {
  // map options
  const options = {
    zoom: 12,
    center: {
      lat: 44.977456,
      lng: -93.2625
    }
  };
  // new map
  const map = new google.maps.Map(document.getElementById("map"), options);
  // Listen for click on map
  google.maps.event.addListener(map, "click", event => {
    // Add marker
  });
  // content of marker
  const contentString =
    '<div id="content">' +
    '<div id="siteNotice">' +
    "</div>" +
    '<h1 id="firstHeading" class="firstHeading">Bent Brewstillery</h1>' +
    '<div id="bodyContent">' +
    "</div>" +
    '<img src="https://s3-media1.fl.yelpcdn.com/bphoto/yac1q7X_vOirkNkYgfc-sw/o.jpg" height="115" width="83">' +
    "</div>";
  // Add Marker Function
  function addMarker(props) {
    const marker = new google.maps.Marker({
      position: props.coords,
      map
      // icon:props.iconImage
    });

    // Check for customicon
    if (props.iconImage) {
      // Set icon image
      marker.setIcon(props.iconImage);
    }
    
    // Check content
    if (props.content) {
      const infoWindow = new google.maps.InfoWindow({
       content: props.content, 
      });

      marker.addListener("click", () => {
        infoWindow.open(map, marker);
      });
    }
  }

  // Array of markers
   const markers = [
    {
      coords: {
        lat: 42.4668,
        lng: -70.9495
      },
      iconImage: "./public/images/yaybidet.jpg",
      content: "<h1>Lynn MA</h1>"
    },
    {
      coords: {
        lat: 45.024963,
        lng: -93.173886
      },
      iconImage: "https://png.icons8.com/ios-glyphs/50/000000/bidet.png",
      content: contentString
    },
    {
      coords: {
        lat: 44.980674,
        lng: -93.175621
      },
      iconImage: "https://www.freeiconspng.com/uploads/toilet-icon-png-24.png",
      content: "<h1>Minnesota State Fair Restroom</h1>"
    }
  ];

  // Loop through markers
  for (let i = 0; i < markers.length; i++) {
    // Add marker
    addMarker(markers[i]);
  }

  const geocoder = new google.maps.Geocoder();

  document.getElementById("submit").addEventListener("click", () => {
    geocodeAddress(geocoder, map);
  });
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(
      position => {
        const pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        console.log(pos);

        // infoWindow.setPosition(pos);
        // infoWindow.setContent("Location found.");
        // infoWindow.open(map);
        map.setCenter(pos);
      },
      () => {
        handleLocationError(true, infoWindow, map.getCenter());
      }
    );
  } else {
    // Browser doesn't support Geolocation
    handleLocationError(false, infoWindow, map.getCenter());
  }
}

function geocodeAddress(geocoder, resultsMap) {
  const address = document.getElementById("address").value;
  geocoder.geocode(
    {
      address
    },
    (results, status) => {
      if (status === "OK") {
        resultsMap.setCenter(results[0].geometry.location);
        const marker = new google.maps.Marker({
          map: resultsMap,
          position: results[0].geometry.location
        });
      } else {
        alert(`Geocode was not successful for the following reason: ${status}`);
      }
    }
  );
  console.log(address);
}
  </script>
  <script src="/initmap.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA0FeHIxkGWXjnXjTXmaEauw2kwz29CyMo&callback=initMap&libraries=places"async defer></script>
  {{!-- <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA0FeHIxkGWXjnXjTXmaEauw2kwz29CyMo&libraries=geometry,places">
  </script> --}}
</body>
</html>